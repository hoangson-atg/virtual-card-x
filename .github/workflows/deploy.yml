name: Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build Docker image
        run: docker build --no-cache -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest .

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo ${{ secrets.TOKEN_GITHUB }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            docker ps -aqf "name=^virtual-card-x-be$" | xargs -r docker stop
            docker ps -aqf "name=^virtual-card-x-be$" | xargs -r docker rm
            docker run -d \
              --name tai-nguyen-otp-mail-service-back-end \
              -p 8000:8000 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            # Remove old images
            docker image prune -f --filter "dangling=true"
            # docker images ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest -q | xargs -r docker rmi || true
